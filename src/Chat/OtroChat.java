/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Chat;

import Codee.Usuario;
import java.io.File;
import java.util.List;
import java.util.Observable;
import java.util.Observer;

/**
 *
 * @author cristian
 */
public class OtroChat extends javax.swing.JFrame implements Observer{
    private static OtroChat servidorView;
    private Usuario actual, destino;
    private GestorConversaciones gestor;
    
    /**
     * Creates new form ServidorView
     */
    public OtroChat(Usuario actual, Usuario destino) {
        initComponents();
        this.actual=actual;
        this.destino=destino;
        
         
                String nombreArchivo = GestorConversaciones.obtenerArchivoConversacion(actual.getUsername(), destino.getUsername());
                gestor = new GestorConversaciones(nombreArchivo);
                 
                 //String nombreArchivo = "Chat/" + actual.getUsername() + "_" + destino.getUsername() + ".bin";
                 

        // Cargar conversación previa desde el archivo
        cargarConversacionPrevia();
        
        this.txtHistorial.append("....BIENVENIDO...."+"\n\n");
    }

     public void notificarConexion(String msj) {
        this.txtHistorial.append(msj + "\n");
        guardarMensaje(new Mensaje(destino.getUsername(), actual.getUsername(), msj));
    }
     
     private void guardarMensaje(Mensaje mensaje) {
        gestor.guardarMensaje(mensaje);
    }

     
    private void cargarConversacionPrevia() {
        List<Mensaje> mensajes = gestor.cargarConversacion();
        for (Mensaje mensaje : mensajes) {
            this.txtHistorial.append(mensaje + "\n");
        }
    }
    
    public void setUsuarios(Usuario actual, Usuario destino) {
    this.actual = actual;
    this.destino = destino;

    // Actualizar gestor de conversaciones si es necesario
    String nombreArchivo = GestorConversaciones.obtenerArchivoConversacion(actual.getUsername(), destino.getUsername());
    this.gestor = new GestorConversaciones(nombreArchivo);

    
}

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        txtHistorial = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        txtHistorial.setColumns(20);
        txtHistorial.setRows(5);
        jScrollPane1.setViewportView(txtHistorial);

        jLabel1.setText("Servidor");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(116, 116, 116)
                .addComponent(jLabel1)
                .addContainerGap(126, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 289, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jLabel1)
                .addContainerGap(267, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(40, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(16, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    
    public static OtroChat getInstance(Usuario actual, Usuario destino) {
        if (servidorView == null) {
            servidorView = new OtroChat(actual, destino);
        }
        return servidorView;
    }
    
      public static void cerrar() {
        if (servidorView != null) {
            servidorView.dispose();
            servidorView = null;
        }
    }
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea txtHistorial;
    // End of variables declaration//GEN-END:variables

    @Override
    public void update(Observable o, Object arg) {
        // Actualización desde observable
        String mensaje = (String) arg;
        this.txtHistorial.append(mensaje + "\n");
        guardarMensaje(new Mensaje(destino.getUsername(), actual.getUsername(), mensaje));
    }

}
